name: Apply Formatting and Update Changelog

on:
  push:
    branches:
      - main

jobs:
  format_and_update_changelog:
    runs-on: ubuntu-latest
    env:
      CHANGELOG_FILE: CHANGELOG.md
      FETCH_LIMIT: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ env.FETCH_LIMIT }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install black isort toml

      - name: Check for config.toml.sample changes
        id: check_config
        run: |
          git diff --name-only HEAD HEAD~1 | grep -q "config.toml.sample" && echo "config_changed=true" >> $GITHUB_OUTPUT || echo "config_changed=false" >> $GITHUB_OUTPUT

      - name: Checkout target repository
        if: steps.check_config.outputs.config_changed == 'true'
        uses: actions/checkout@v4
        with:
          repository: 'amidabuddha/llm-unichat'
          path: 'llm-unichat'      
          token: ${{ secrets.UNICHAT_REPO_PAT }}
                        
      - name: Generate and Copy models.py
        if: steps.check_config.outputs.config_changed == 'true'
        run: |                       
            python3 helpers/get_models.py > llm-unichat/unichat/models.py
            
      - name: Commit and Push Changes
        if: steps.check_config.outputs.config_changed == 'true'
        working-directory: llm-unichat
        run: |                                                
            git config user.name github-actions                 
            git config user.email github-actions@github.com     
            git add unichat/models.py                           
            git commit -m "Update models.py from source repository"                                                   
            git push origin main 

      - name: Formatting
        run: |
          black --line-length 120 .
          isort .

      - name: Generate Changelog
        run: |
          categories=("Features" "Improvements" "Bug Fixes" "Others")
          patterns=("\[feature\(s\)\?\]" "\[improvement\(s\)\?\]" "\[bugfix\(es\)\?\]" "\[other\(s\)\?\]")
          echo -n "" > ${{ env.CHANGELOG_FILE }}
          for i in "${!categories[@]}"; do
            entries=$(git log -${{env.FETCH_LIMIT}} --pretty=format:"%h %s" | grep -i "${patterns[$i]}" | sed -E "s/${patterns[$i]} //" | awk '{print "- ["$1"] "substr($0, index($0,$2))}')
            if [ -n "$entries" ]; then
              echo -e "> ${categories[$i]}:\n$entries\n" >> ${{ env.CHANGELOG_FILE }}
            fi
          done
          echo -e "\n---" >> ${{ env.CHANGELOG_FILE }}

      - name: Bump version
        run: |
          cd app-data
          bash bump-version.sh
          cd -

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -A
          git commit -m "Formatting and updating the changelog." || echo "No changes to commit, continuing workflow"

      - name: Push changes
        if: ${{ success() }}
        run: git push